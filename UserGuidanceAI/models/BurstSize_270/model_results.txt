Best parameters found:
{'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.0001, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': (23, 14, 8), 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'adam'}
CV results:
{'mean_fit_time': array([72.07815657]), 'std_fit_time': array([5.59482235]), 'mean_score_time': array([1.62842751]), 'std_score_time': array([0.32466498]), 'param_MLPClassifier__activation': masked_array(data=['relu'],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_MLPClassifier__alpha': masked_array(data=[0.0001],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_MLPClassifier__batch_size': masked_array(data=['auto'],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_MLPClassifier__early_stopping': masked_array(data=[True],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_MLPClassifier__hidden_layer_sizes': masked_array(data=[(23, 14, 8)],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_MLPClassifier__learning_rate': masked_array(data=['adaptive'],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_MLPClassifier__learning_rate_init': masked_array(data=[0.001],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_MLPClassifier__solver': masked_array(data=['adam'],
             mask=[False],
       fill_value='?',
            dtype=object), 'params': [{'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.0001, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': (23, 14, 8), 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'adam'}], 'split0_test_balanced_accuracy': array([0.46503914]), 'split1_test_balanced_accuracy': array([0.79749595]), 'split2_test_balanced_accuracy': array([0.57376054]), 'split3_test_balanced_accuracy': array([0.65784831]), 'split4_test_balanced_accuracy': array([0.60043894]), 'mean_test_balanced_accuracy': array([0.61891658]), 'std_test_balanced_accuracy': array([0.10905506]), 'rank_test_balanced_accuracy': array([1]), 'split0_train_balanced_accuracy': array([0.99962182]), 'split1_train_balanced_accuracy': array([0.99955709]), 'split2_train_balanced_accuracy': array([0.99939077]), 'split3_train_balanced_accuracy': array([0.99981546]), 'split4_train_balanced_accuracy': array([0.99991043]), 'mean_train_balanced_accuracy': array([0.99965911]), 'std_train_balanced_accuracy': array([0.00018515]), 'split0_test_f1_micro': array([0.43758275]), 'split1_test_f1_micro': array([0.8245697]), 'split2_test_f1_micro': array([0.62738793]), 'split3_test_f1_micro': array([0.67284593]), 'split4_test_f1_micro': array([0.55944387]), 'mean_test_f1_micro': array([0.62436604]), 'std_test_f1_micro': array([0.12770577]), 'rank_test_f1_micro': array([1]), 'split0_train_f1_micro': array([0.99966898]), 'split1_train_f1_micro': array([0.99964534]), 'split2_train_f1_micro': array([0.99945619]), 'split3_train_f1_micro': array([0.9998345]), 'split4_train_f1_micro': array([0.99992907]), 'mean_train_f1_micro': array([0.99970682]), 'std_train_f1_micro': array([0.00016354]), 'split0_test_f1_macro': array([0.44345866]), 'split1_test_f1_macro': array([0.79373619]), 'split2_test_f1_macro': array([0.57641971]), 'split3_test_f1_macro': array([0.64518416]), 'split4_test_f1_macro': array([0.57799184]), 'mean_test_f1_macro': array([0.60735811]), 'std_test_f1_macro': array([0.11388607]), 'rank_test_f1_macro': array([1]), 'split0_train_f1_macro': array([0.99962142]), 'split1_train_f1_macro': array([0.99963517]), 'split2_train_f1_macro': array([0.99937752]), 'split3_train_f1_macro': array([0.99981298]), 'split4_train_f1_macro': array([0.99991675]), 'mean_train_f1_macro': array([0.99967277]), 'std_train_f1_macro': array([0.00018461])}
Model accuracy score: 0.5861
Model F1 macro score: 0.5793
Model F1 micro score: 0.5861
