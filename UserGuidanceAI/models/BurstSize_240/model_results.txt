Best parameters found:
{'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.05, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': 70, 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'adam'}
CV results:
{'mean_fit_time': array([ 174.17562222,  545.23078852,  301.82652769,  747.02240391,
        138.18376312,  477.23212271,  401.4228478 , 1349.67704897,
        240.23061099,  938.52806549,  183.45591955,  525.63397756,
        247.02169771,  791.34423599,  154.9435081 ,  480.91571484,
        452.93723884, 1254.7386785 ,  281.71214828,  855.12224374]), 'std_fit_time': array([ 25.26789703,  27.48789977,  56.97899548,  38.01334149,
        15.5348659 ,  38.80432444,  81.68798361,  90.43606689,
        10.34048714,  84.31000946,  26.96295151,  39.65183462,
        25.90565128,  35.41454051,  12.1430556 ,  36.47182116,
       153.04403744,  35.72172174,  73.13997334,  69.44079653]), 'mean_score_time': array([ 4.36001377, 14.96980457,  5.84128041,  7.09277253,  2.69704046,
        9.18532519,  7.72939591, 10.46609831,  4.27987189,  9.55125175,
        2.52441554,  5.50108423,  5.6614996 ,  7.10068521,  2.81453805,
        6.93139687,  9.97026701,  2.16122813,  3.84448476,  1.73389473]), 'std_score_time': array([0.33603673, 7.07827997, 2.72372807, 4.32687606, 0.53057988,
       2.42989928, 3.46250897, 5.10501885, 0.32559586, 5.75475897,
       0.14895291, 1.31083673, 1.44384861, 2.99503341, 0.40480165,
       4.8015531 , 5.28284521, 0.83505005, 0.542707  , 0.67566506]), 'param_MLPClassifier__activation': masked_array(data=['relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_MLPClassifier__alpha': masked_array(data=[0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001,
                   0.0001, 0.0001, 0.0001, 0.05, 0.05, 0.05, 0.05, 0.05,
                   0.05, 0.05, 0.05, 0.05, 0.05],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_MLPClassifier__batch_size': masked_array(data=['auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_MLPClassifier__early_stopping': masked_array(data=[True, True, True, True, True, True, True, True, True,
                   True, True, True, True, True, True, True, True, True,
                   True, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_MLPClassifier__hidden_layer_sizes': masked_array(data=[(23, 14, 8), (23, 14, 8), (64, 23, 14, 8),
                   (64, 23, 14, 8), (14, 8), (14, 8),
                   (128, 64, 23, 14, 8), (128, 64, 23, 14, 8), 70, 70,
                   (23, 14, 8), (23, 14, 8), (64, 23, 14, 8),
                   (64, 23, 14, 8), (14, 8), (14, 8),
                   (128, 64, 23, 14, 8), (128, 64, 23, 14, 8), 70, 70],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_MLPClassifier__learning_rate': masked_array(data=['adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_MLPClassifier__learning_rate_init': masked_array(data=[0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
                   0.001, 0.001, 0.001, 0.001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_MLPClassifier__solver': masked_array(data=['adam', 'sgd', 'adam', 'sgd', 'adam', 'sgd', 'adam',
                   'sgd', 'adam', 'sgd', 'adam', 'sgd', 'adam', 'sgd',
                   'adam', 'sgd', 'adam', 'sgd', 'adam', 'sgd'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.0001, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': (23, 14, 8), 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'adam'}, {'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.0001, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': (23, 14, 8), 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'sgd'}, {'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.0001, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': (64, 23, 14, 8), 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'adam'}, {'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.0001, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': (64, 23, 14, 8), 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'sgd'}, {'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.0001, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': (14, 8), 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'adam'}, {'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.0001, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': (14, 8), 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'sgd'}, {'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.0001, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': (128, 64, 23, 14, 8), 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'adam'}, {'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.0001, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': (128, 64, 23, 14, 8), 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'sgd'}, {'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.0001, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': 70, 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'adam'}, {'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.0001, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': 70, 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'sgd'}, {'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.05, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': (23, 14, 8), 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'adam'}, {'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.05, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': (23, 14, 8), 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'sgd'}, {'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.05, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': (64, 23, 14, 8), 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'adam'}, {'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.05, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': (64, 23, 14, 8), 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'sgd'}, {'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.05, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': (14, 8), 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'adam'}, {'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.05, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': (14, 8), 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'sgd'}, {'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.05, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': (128, 64, 23, 14, 8), 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'adam'}, {'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.05, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': (128, 64, 23, 14, 8), 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'sgd'}, {'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.05, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': 70, 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'adam'}, {'MLPClassifier__activation': 'relu', 'MLPClassifier__alpha': 0.05, 'MLPClassifier__batch_size': 'auto', 'MLPClassifier__early_stopping': True, 'MLPClassifier__hidden_layer_sizes': 70, 'MLPClassifier__learning_rate': 'adaptive', 'MLPClassifier__learning_rate_init': 0.001, 'MLPClassifier__solver': 'sgd'}], 'split0_test_balanced_accuracy': array([0.49121668, 0.36180349, 0.47013495, 0.41903751, 0.44084071,
       0.4425938 , 0.44988129, 0.3800449 , 0.52249577, 0.49610051,
       0.40422491, 0.36341948, 0.4137192 , 0.41941856, 0.44807272,
       0.44358931, 0.46494072, 0.38313033, 0.55430395, 0.49696978]), 'split1_test_balanced_accuracy': array([0.83366482, 0.75281896, 0.79871608, 0.80664632, 0.78707467,
       0.79340144, 0.77213536, 0.70050638, 0.85027865, 0.84377563,
       0.82240069, 0.75379678, 0.78158679, 0.80707011, 0.78525633,
       0.79355728, 0.76809791, 0.70514149, 0.85088863, 0.84459596]), 'split2_test_balanced_accuracy': array([0.57416834, 0.49699184, 0.58614829, 0.52092016, 0.515229  ,
       0.47671486, 0.61212555, 0.51698856, 0.55208532, 0.54413484,
       0.57138164, 0.49746348, 0.56342183, 0.52199629, 0.49871289,
       0.47719083, 0.52369648, 0.51596107, 0.55123827, 0.54434652]), 'split3_test_balanced_accuracy': array([0.77688564, 0.75357289, 0.66195565, 0.68553665, 0.64082087,
       0.66416206, 0.63672677, 0.66056673, 0.66782679, 0.66289917,
       0.75727298, 0.75285924, 0.67719905, 0.68325963, 0.6700237 ,
       0.66418435, 0.63769498, 0.66103185, 0.66534171, 0.66289917]), 'split4_test_balanced_accuracy': array([0.53611757, 0.61195013, 0.531338  , 0.57656143, 0.6182701 ,
       0.60118888, 0.57719874, 0.55671301, 0.62795689, 0.61388338,
       0.57223765, 0.6123074 , 0.58738423, 0.57666912, 0.64541582,
       0.60246451, 0.63251105, 0.55900435, 0.63022081, 0.61449501]), 'mean_test_balanced_accuracy': array([0.64241061, 0.59542746, 0.60965859, 0.60174041, 0.60044707,
       0.59561221, 0.60961354, 0.56296392, 0.64412868, 0.63215871,
       0.62550357, 0.59596928, 0.60466222, 0.60168274, 0.60949629,
       0.59619726, 0.60538823, 0.56485382, 0.65039867, 0.63266129]), 'std_test_balanced_accuracy': array([0.13673078, 0.15121163, 0.11369381, 0.1338316 , 0.11791003,
       0.12759465, 0.10365316, 0.11318694, 0.11540146, 0.12026697,
       0.14890423, 0.15071411, 0.1224928 , 0.13344257, 0.12179976,
       0.12732966, 0.10454938, 0.11347157, 0.10944738, 0.12030988]), 'rank_test_balanced_accuracy': array([ 3, 18,  7, 12, 14, 17,  8, 20,  2,  5,  6, 16, 11, 13,  9, 15, 10,
       19,  1,  4]), 'split0_train_balanced_accuracy': array([0.99967511, 0.9999211 , 0.99962097, 0.99962097, 0.99955059,
       0.9972112 , 0.99965811, 0.99989325, 0.99933628, 0.99963153,
       0.99947169, 0.9999211 , 0.99947926, 0.99959389, 0.99937689,
       0.99713152, 0.9998323 , 0.99989403, 0.99936882, 0.99963153]), 'split1_train_balanced_accuracy': array([0.99966383, 0.99973004, 0.99964802, 0.99998487, 1.        ,
       0.99978022, 0.99972363, 0.99985309, 0.99993149, 0.9999474 ,
       0.99972478, 0.99983833, 0.99994585, 0.99998487, 1.        ,
       0.99971094, 0.99991878, 0.99985309, 0.99988929, 0.9999737 ]), 'split2_train_balanced_accuracy': array([0.9998685 , 0.99954674, 0.99960474, 0.99913006, 0.99957957,
       0.99960088, 0.99950633, 0.99985106, 0.99952584, 0.99984066,
       0.9998948 , 0.99954751, 0.99956577, 0.99892621, 0.99981205,
       0.99960088, 0.99881527, 0.99966156, 0.99945811, 0.99984066]), 'split3_train_balanced_accuracy': array([0.99989249, 0.99978498, 0.99977295, 0.9992473 , 0.99955241,
       0.99986774, 0.99964643, 0.99992034, 0.99968389, 0.99943012,
       0.99970919, 0.99973084, 0.99897182, 0.99927437, 0.99968134,
       0.99973626, 0.99943383, 0.99970222, 0.99936446, 0.99940382]), 'split4_train_balanced_accuracy': array([0.99987968, 0.99984222, 0.99998487, 0.9999124 , 1.        ,
       0.99987968, 1.        , 0.99974198, 0.99968047, 0.99984709,
       1.        , 0.99992111, 0.99987378, 0.9999124 , 0.9999737 ,
       0.99990598, 0.99998487, 0.99995779, 0.99979682, 0.99984709]), 'mean_train_balanced_accuracy': array([0.99979592, 0.99976502, 0.99972631, 0.99957912, 0.99973652,
       0.99926794, 0.9997069 , 0.99985194, 0.9996316 , 0.99973936,
       0.99976009, 0.99979178, 0.9995673 , 0.99953835, 0.9997688 ,
       0.99921712, 0.99959701, 0.99981374, 0.9995755 , 0.99973936]), 'std_train_balanced_accuracy': array([1.03587373e-04, 1.26166808e-04, 1.42150249e-04, 3.43281180e-04,
       2.15379218e-04, 1.03319616e-03, 1.62758420e-04, 6.07915871e-05,
       1.96703134e-04, 1.85690295e-04, 1.80396799e-04, 1.40711401e-04,
       3.46289907e-04, 3.96680569e-04, 2.27399513e-04, 1.04736611e-03,
       4.35219871e-04, 1.13438793e-04, 2.22926329e-04, 2.00496367e-04]), 'split0_test_f1_micro': array([0.45897921, 0.34234405, 0.43733459, 0.39971645, 0.41758034,
       0.41862004, 0.42589792, 0.36805293, 0.48289225, 0.46086957,
       0.38109641, 0.34338374, 0.3963138 , 0.40009452, 0.4231569 ,
       0.4194707 , 0.43865784, 0.37069943, 0.51020794, 0.46162571]), 'split1_test_f1_micro': array([0.85463138, 0.78412098, 0.82655955, 0.83147448, 0.81597353,
       0.8210775 , 0.80396975, 0.7405482 , 0.87088847, 0.86427221,
       0.84574669, 0.78478261, 0.81077505, 0.83185255, 0.81351607,
       0.82126654, 0.79773157, 0.74470699, 0.87145558, 0.86502836]), 'split2_test_f1_micro': array([0.63440454, 0.56493384, 0.636862  , 0.58100189, 0.5731569 ,
       0.5436673 , 0.65784499, 0.57703214, 0.60425331, 0.59943289,
       0.62741021, 0.56540643, 0.61928166, 0.58213611, 0.56020794,
       0.54395085, 0.57967864, 0.57523629, 0.60359168, 0.59952741]), 'split3_test_f1_micro': array([0.79090651, 0.76349371, 0.67369317, 0.69354381, 0.65299178,
       0.67095189, 0.66830513, 0.6614992 , 0.67624539, 0.67142452,
       0.77861802, 0.76245392, 0.68446923, 0.69155875, 0.69836468,
       0.67076283, 0.6692504 , 0.66168825, 0.67681255, 0.67142452]), 'split4_test_f1_micro': array([0.49910199, 0.58096228, 0.50779847, 0.55657435, 0.59533037,
       0.57614141, 0.52698743, 0.5205596 , 0.58625579, 0.59863881,
       0.53190283, 0.58219113, 0.54485301, 0.55695245, 0.6193402 ,
       0.57708668, 0.58398714, 0.52415162, 0.59249456, 0.5993005 ]), 'mean_test_f1_micro': array([0.64760473, 0.60717097, 0.61644956, 0.6124622 , 0.61100658,
       0.60609163, 0.61660105, 0.57353841, 0.64410704, 0.6389276 ,
       0.63295483, 0.60764357, 0.61113855, 0.61251888, 0.62291716,
       0.60650752, 0.61386112, 0.57529652, 0.65091246, 0.6393813 ]), 'std_test_f1_micro': array([0.1556935 , 0.16022002, 0.13544514, 0.1441628 , 0.12873714,
       0.134436  , 0.12952196, 0.12702174, 0.12914177, 0.1316996 ,
       0.16743539, 0.15975578, 0.1384499 , 0.14386759, 0.13104936,
       0.13417293, 0.11801135, 0.12699544, 0.12227817, 0.13170817]), 'rank_test_f1_micro': array([ 2, 16,  9, 12, 14, 18,  8, 20,  3,  5,  6, 15, 13, 11,  7, 17, 10,
       19,  1,  4]), 'split0_train_f1_micro': array([0.99971643, 0.99992911, 0.99966917, 0.99966917, 0.99959828,
       0.99711707, 0.9996928 , 0.99990548, 0.99931471, 0.99966917,
       0.99952739, 0.99992911, 0.99957465, 0.99964554, 0.99943287,
       0.99704617, 0.99985822, 0.99990548, 0.99943287, 0.99966917]), 'split1_train_f1_micro': array([0.99971643, 0.99976369, 0.99955102, 0.99997637, 1.        ,
       0.99978732, 0.99974006, 0.99985822, 0.99992911, 0.99995274,
       0.99976369, 0.99985822, 0.99995274, 0.99997637, 1.        ,
       0.99971643, 0.99992911, 0.99985822, 0.99988185, 0.99997637]), 'split2_train_f1_micro': array([0.99988185, 0.99959828, 0.99964554, 0.99919656, 0.99962191,
       0.99964554, 0.99952739, 0.99985822, 0.99957465, 0.99985822,
       0.99990548, 0.99959828, 0.99955102, 0.99900751, 0.99983459,
       0.99964554, 0.99896025, 0.9996928 , 0.99950376, 0.99985822]), 'split3_train_f1_micro': array([0.99990548, 0.99981096, 0.99978733, 0.99933836, 0.99957466,
       0.99988185, 0.99966918, 0.99992911, 0.99969281, 0.99950377,
       0.99974007, 0.9997637 , 0.99903117, 0.99936199, 0.99971644,
       0.9997637 , 0.99950377, 0.99974007, 0.99940925, 0.99948014]), 'split4_train_f1_micro': array([0.99988185, 0.99985822, 0.99997637, 0.99988185, 1.        ,
       0.99988185, 1.        , 0.9997637 , 0.99969281, 0.99983459,
       1.        , 0.99992911, 0.99983459, 0.99988185, 0.99997637,
       0.99990548, 0.99997637, 0.99995274, 0.99978733, 0.99983459]), 'mean_train_f1_micro': array([0.99982041, 0.99979205, 0.99972589, 0.99961246, 0.99975897,
       0.99926273, 0.99972589, 0.99986294, 0.99964082, 0.9997637 ,
       0.99978733, 0.99981568, 0.99958883, 0.99957465, 0.99979205,
       0.99921547, 0.99964554, 0.99982986, 0.99960301, 0.9997637 ]), 'std_train_f1_micro': array([8.53331886e-05, 1.11240234e-04, 1.46128738e-04, 3.02099968e-04,
       1.97366741e-04, 1.07631186e-03, 1.54305656e-04, 5.67118918e-05,
       1.99619945e-04, 1.58867312e-04, 1.60965530e-04, 1.24504209e-04,
       3.17944994e-04, 3.54300197e-04, 2.06764039e-04, 1.08797408e-03,
       3.80738088e-04, 9.84568674e-05, 1.93941968e-04, 1.72353976e-04]), 'split0_test_f1_macro': array([0.45525349, 0.33999615, 0.4495848 , 0.40652201, 0.42265532,
       0.41492675, 0.43150119, 0.37932961, 0.48394728, 0.46480833,
       0.37677516, 0.34116053, 0.38746248, 0.40690688, 0.42303058,
       0.41573328, 0.43986358, 0.38290366, 0.51587774, 0.46552972]), 'split1_test_f1_macro': array([0.84029398, 0.74544914, 0.81083599, 0.81306132, 0.79025448,
       0.79283874, 0.79096678, 0.69885519, 0.85566068, 0.8468623 ,
       0.82878934, 0.74642656, 0.79165753, 0.81369258, 0.78600402,
       0.79309826, 0.77963624, 0.70435322, 0.85674813, 0.8477969 ]), 'split2_test_f1_macro': array([0.59213172, 0.48582465, 0.57455385, 0.50488636, 0.48670674,
       0.45303124, 0.6152883 , 0.49407686, 0.53412396, 0.53123335,
       0.57887615, 0.48665479, 0.56152782, 0.50718813, 0.47026134,
       0.45330309, 0.49133786, 0.49136302, 0.53328891, 0.53124392]), 'split3_test_f1_macro': array([0.76643956, 0.73716002, 0.65652491, 0.67486087, 0.6427493 ,
       0.66411905, 0.62387612, 0.65372542, 0.66546065, 0.65594776,
       0.73765515, 0.73641886, 0.67362093, 0.67280281, 0.66751256,
       0.66427781, 0.62584664, 0.65500571, 0.66296115, 0.65593885]), 'split4_test_f1_macro': array([0.51862589, 0.59057765, 0.51834854, 0.56970251, 0.59277466,
       0.58833998, 0.54731775, 0.54160791, 0.58699474, 0.59343419,
       0.54942464, 0.5916372 , 0.56069408, 0.57016625, 0.62509159,
       0.5891078 , 0.5941712 , 0.54588374, 0.59184069, 0.59402877]), 'mean_test_f1_macro': array([0.63454893, 0.57980152, 0.60196962, 0.59380661, 0.5870281 ,
       0.58265115, 0.60179003, 0.553519  , 0.62523746, 0.61845718,
       0.61430409, 0.58045959, 0.59499257, 0.59415133, 0.59438002,
       0.58310405, 0.5861711 , 0.55590187, 0.63214332, 0.61890763]), 'std_test_f1_macro': array([0.14636283, 0.15404884, 0.12455254, 0.1401469 , 0.12768839,
       0.13840593, 0.1169815 , 0.11417629, 0.12995373, 0.13070314,
       0.15691009, 0.15365979, 0.13433134, 0.13970167, 0.1324971 ,
       0.13826356, 0.11786954, 0.1149377 , 0.12354047, 0.13083599]), 'rank_test_f1_macro': array([ 1, 18,  7, 12, 13, 16,  8, 20,  3,  5,  6, 17,  9, 11, 10, 15, 14,
       19,  2,  4]), 'split0_train_f1_macro': array([0.99967976, 0.99991994, 0.99962638, 0.99962638, 0.99953721,
       0.9972538 , 0.99965308, 0.99989325, 0.99926751, 0.99963935,
       0.99946868, 0.99991994, 0.99950177, 0.99959969, 0.99936515,
       0.99719144, 0.99983532, 0.99989325, 0.99935955, 0.99963935]), 'split1_train_f1_macro': array([0.99968858, 0.99969211, 0.99956122, 0.99997928, 1.        ,
       0.99974401, 0.99974989, 0.99984333, 0.99992693, 0.99994842,
       0.99973003, 0.99981708, 0.9999375 , 0.99997928, 1.        ,
       0.99966081, 0.99990626, 0.99984333, 0.99987458, 0.99996914]), 'split2_train_f1_macro': array([0.99986658, 0.99954875, 0.99959973, 0.99913943, 0.99958458,
       0.99958287, 0.99949026, 0.99984548, 0.99951862, 0.99983989,
       0.99989326, 0.99955332, 0.99951932, 0.99893454, 0.99980903,
       0.99958287, 0.9988338 , 0.99965967, 0.99945643, 0.99983989]), 'split3_train_f1_macro': array([0.99989326, 0.99978653, 0.99976544, 0.99925647, 0.99953306,
       0.9998624 , 0.99964356, 0.99991995, 0.99967066, 0.99944877,
       0.99970648, 0.99973316, 0.99897432, 0.99929565, 0.9996798 ,
       0.99974052, 0.99943562, 0.99970647, 0.99931906, 0.99942805]), 'split4_train_f1_macro': array([0.99988409, 0.9998757 , 0.9999789 , 0.99988891, 1.        ,
       0.99988589, 1.        , 0.999732  , 0.99961917, 0.99984709,
       1.        , 0.99993785, 0.99984331, 0.99988891, 0.99996914,
       0.9999066 , 0.9999789 , 0.99995779, 0.99975271, 0.99984709]), 'mean_train_f1_macro': array([0.99980245, 0.9997646 , 0.99970633, 0.9995781 , 0.99973097,
       0.99926579, 0.99970736, 0.9998468 , 0.99960058, 0.9997447 ,
       0.99975969, 0.99979227, 0.99955525, 0.99953962, 0.99976462,
       0.99921645, 0.99959798, 0.9998121 , 0.99955247, 0.9997447 ]), 'std_train_f1_macro': array([9.70006016e-05, 1.33268305e-04, 1.52708396e-04, 3.33394621e-04,
       2.20406204e-04, 1.01171140e-03, 1.68283339e-04, 6.43435779e-05,
       2.14203459e-04, 1.78727633e-04, 1.81099472e-04, 1.40500765e-04,
       3.37851807e-04, 3.85891810e-04, 2.30640621e-04, 1.01817006e-03,
       4.25863459e-04, 1.12408787e-04, 2.21258801e-04, 1.90412479e-04])}
Model accuracy score: 0.5598
Model F1 macro score: 0.5617
Model F1 micro score: 0.5598
